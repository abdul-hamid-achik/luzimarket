name: CI & Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # Database configuration for CI
      DB_MODE: offline
      DATABASE_URL: ./tmp/db.sqlite
      
      # Authentication and security
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      
      # API configuration
      CORS_ORIGIN: http://localhost:5173
      VITE_API_URL: http://localhost:8000
      
      # Stripe configuration (test keys only in CI)
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: whsec_test_ci_webhook_secret_for_testing_only
      
      # CI environment flags
      CI: true
      NODE_ENV: test
      SKIP_STRIPE_CLI: true
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --silent --ignore-scripts
        
      - name: Create tmp directory
        run: mkdir -p tmp
        
      - name: Prepare .env file
        run: |
          echo "# CI Environment Configuration" > .env
          echo "DB_MODE=${DB_MODE}" >> .env
          echo "DATABASE_URL=${DATABASE_URL}" >> .env
          echo "NEXTAUTH_SECRET=${NEXTAUTH_SECRET}" >> .env
          echo "CORS_ORIGIN=${CORS_ORIGIN}" >> .env
          echo "STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}" >> .env
          echo "STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}" >> .env
          echo "VITE_API_URL=${VITE_API_URL}" >> .env
          echo "CI=${CI}" >> .env
          echo "NODE_ENV=${NODE_ENV}" >> .env
          echo "SKIP_STRIPE_CLI=${SKIP_STRIPE_CLI}" >> .env
          echo "" >> .env
          echo "# Verify environment setup" >> .env
          echo "Generated .env for CI with DB_MODE=${DB_MODE}"
          
      - name: Verify environment setup
        run: |
          echo "=== Environment Variables ==="
          echo "DB_MODE: $DB_MODE"
          echo "NODE_ENV: $NODE_ENV"
          echo "CI: $CI"
          echo "SKIP_STRIPE_CLI: $SKIP_STRIPE_CLI"
          echo "DATABASE_URL: $DATABASE_URL"
          echo "============================="
          
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        
      - name: Run database migrations (pglite mode)
        run: |
          echo "Running migrations in pglite mode..."
          npm run migrate:push
        env:
          DB_MODE: pglite
          
      - name: Seed database (pglite mode)
        run: |
          echo "Seeding database in pglite mode..."
          npm run seed
        env:
          DB_MODE: pglite
          
      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          npm run test
          
      - name: Run E2E tests (offline mode)
        run: |
          echo "Running E2E tests in offline mode..."
          DB_MODE=offline CI=true SKIP_STRIPE_CLI=true npm run test:e2e
        env:
          DB_MODE: offline
          CI: true
          SKIP_STRIPE_CLI: true
          
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tmp/playwright-report/
          retention-days: 30
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            tmp/playwright-test-results/
            tmp/playwright-logs/
          retention-days: 30