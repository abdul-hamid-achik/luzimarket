services:
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pg_proxy:
    image: ghcr.io/neondatabase/wsproxy:latest
    environment:
      APPEND_PORT: 'db:5432'
      ALLOW_ADDR_REGEX: '.*'
      LOG_TRAFFIC: 'true'
    ports:
      - '5434:80'
    depends_on:
      - db

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      target: builder
      args:
        PORT: ${PORT}
    entrypoint: [ "/app/apps/backend/entrypoint.sh" ]
    command: [ "npm", "run", "dev", "--", "--poll" ]
    working_dir: /app/apps/backend
    restart: always
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - PORT=${PORT}
      - DATABASE_URL=postgresql://postgres:password@db:5432/ecommerce
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRAPI_URL=http://strapi:1337
      - STRAPI_API_TOKEN=
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      db:
        condition: service_healthy
      strapi:
        condition: service_healthy
    healthcheck:
      disable: true
    volumes:
      - ./apps/backend:/app/apps/backend
      - /app/apps/backend/node_modules

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:${PORT}
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - /app/apps/frontend/node_modules

  strapi:
    build:
      context: .
      dockerfile: apps/strapi/Dockerfile
    command: npm run develop
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - PORT=1337
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=ecommerce
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - APP_KEYS=${APP_KEYS}
      - API_TOKEN_SALT=${API_TOKEN_SALT}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - TRANSFER_TOKEN_SALT=qrmV5VW3Qc7nN8KzXtp5RA==
      - ENCRYPTION_KEY=hKTfJhZUY6VfQ+bI5WYSz7oYBXfZSyeqXou3Oy5efIc=
      - NODE_ENV=development
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1337/admin/login" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - ./apps/strapi:/opt/app
      - /opt/app/node_modules
    ports:
      - "1337:1337"
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
    external: false
